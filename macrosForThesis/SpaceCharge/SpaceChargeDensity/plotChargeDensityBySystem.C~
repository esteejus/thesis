#include "/home/justin/mythesis/thesis_style.h"
using namespace style;

void plotChargeDensityBySystem()
{
  gStyle->SetOptStat(0);

  vector<double> run = {2272,2273,2274,2275,2276,2283,2284,2285,2286,2288,2289,2291,2310,2311,2314,2315,2320,2322,2323,2324,2325,2331,2332,2333,2334,2335,2336,2337,2340,2341,2362,2363,2368,2369,2370,2371,2372,2373,2374,2375,2378,2379,2380,2381,2382,2383,2384,2385,2386,2387,2388,2389,2391,2392,2393,2394,2395,2396,2397,2398,2399,2400,2401,2402,2429,2432,2433,2434,2437,2438,2439,2440,2442,2453,2461,2462,2463,2501,2502,2503,2505,2506,2507,2508,2509,2542,2543,2544,2546,2547,2548,2552,2553,2554,2555,2556,2557,2558,2559,2560,2562,2563,2564,2565,2566,2567,2568,2569,2570,2571,2572,2573,2574,2575,2578,2579,2580,2581,2582,2583,2584,2585,2586,2587,2588,2589,2590,2591,2592,2593,2594,2595,2596,2597,2598,2599,2600,2601,2617,2618,2619,2620,2621,2622,2623,2841,2843,2844,2845,2846,2848,2849,2850,2851,2852,2855,2856,2857,2858,2859,2860,2861,2875,2877,2878,2879,2880,2881,2882,2883,2884,2887,2888,2889,2890,2891,2892,2893,2894,2896,2898,2899,2900,2901,2902,2903,2904,2905,2907,2914,2916,2917,2919,2920,2921,2922,2924,2925,2926,2927,2929,2930,2931,2932,2933,2934,2935,2936,2939,2940,2941,2942,2943,2944,2945,2946,2948,2955,2956,2958,2959,2960,2961,2962,2964,2965,2966,2968,2969,2970,2971,2972,2973,2975,2976,2977,2978,2979,2980,2981,2982,2983,2984,2985,2986,2988,2989,2990,2991,2992,2993,2997,2999,3000,3002,3003,3007,3039,3059,3061,3062,3065,3066,3068,3069,3071,3074,3075,3076,3077,3078,3080,3081,3082,3083,3084,3085,3087,3088,3089,3090,3091,3092,3093,3094,3095,3097,3098,3102,3103,3138,3139,3140,3141,3142,3143,3144,3145,3146,3148,3149,3150,3151,3152,3153,3154,3155,3156,3157,3158,3159,3165,3166,3167,3168,3169,3170,3171,3172,3177,3179,3180,3181,3182,3183,3184};


   vector<double> beamrate = {7347.95797,7342.935056,6795.486692,7024.843218,7214.203244,9122.9481,8934.122162,-1,7559.72649,7302.535969,9152.024872,8880.065738,7609.756407,7682.581072,6576.318293,7249.851848,6430.399546,7351.154203,7319.849053,8466.497122,9154.032968,10717.40086,10577.20939,10681.80661,11702.1116,10798.14593,10776.19342,11415.63368,10983.03202,11735.922,10494.24444,10323.10471,12436.16228,11470.07571,11206.14456,11189.46342,10495.88593,11417.21472,11004.10642,11155.05559,11430.46714,10300.64079,9517.318338,9567.520827,10020.06496,9319.229646,10340.02648,10792.40346,11314.68725,9600.994465,10128.85399,10005.5036,9889.375922,9670.78676,9793.145156,10048.4637,9566.91234,8927.956756,9006.959683,8942.424747,9500.531589,8812.99305,9285.819698,9037.485416,7092.407162,6132.073093,5961.70053,6766.929817,7872.512543,7349.741753,6970.619048,7900.93862,7122.428032,5909.405919,7949.153535,7430.775471,8725.239996,11026.42859,9923.221407,10511.85321,9591.9895,9181.091115,8775.450246,9370.668531,9616.849057,7619.622374,7771.519987,6777.211552,8038.260246,7117.030265,-1,6834.608309,7956.849616,9249.191335,8188.497696,8564.424631,8363.921333,6898.046957,6726.872432,8857.181364,10903.86679,8425.012185,7298.989878,8390.994264,9029.350601,10699.14876,10001.02869,10666.7183,10812.61253,10042.14307,10432.13786,9799.162573,10261.80175,9714.989392,9676.603012,9131.980071,9554.268605,8792.320105,8667.342987,7842.394327,7132.585027,9164.10363,8405.88141,9162.605059,9128.94783,8684.813725,8928.734854,8914.662194,8664.848013,8542.730046,9125.797442,9120.161326,8761.801666,8376.761659,8763.636064,8279.270341,9505.411089,-1,8236.728313,7758.013231,7896.184611,7518.100003,6204.735393,8048.720281,8353.824379,10378.45018,10571.44515,9639.835645,9253.620005,9185.48729,-1,8638.27149,9402.068532,10051.70484,10722.73852,10046.33136,9358.816286,10377.51609,10485.57474,9572.523494,10465.84942,10167.26082,9935.146068,10453.90175,10648.4337,10023.32631,9317.148258,10192.41895,10565.23604,9455.653158,10290.61816,10073.03072,10913.96416,10295.76799,10432.16365,9918.898135,11431.06499,10884.47736,11154.43334,10456.87373,10008.36593,9683.880775,9223.346759,9700.394864,9852.874968,9734.123956,9649.674118,10032.64447,10389.15392,10577.55825,10153.67345,10142.90812,10010.85578,10904.50668,10540.90367,10719.24921,8879.294303,9712.483365,10627.74185,10568.41751,10836.98154,9443.776588,9061.312486,10149.47524,10360.00486,10852.45928,10782.41914,11208.64573,10788.83844,10646.85254,10846.44048,10443.87439,11984.24824,11483.71839,11512.23966,11666.32506,11395.12763,11495.70208,11342.2835,11743.90505,10782.86666,11799.2167,11310.07378,11175.21102,11267.58048,11135.77695,11812.36653,10571.22481,10330.11467,10751.90439,11032.62997,10847.4129,10927.35833,11333.35811,11408.95734,10603.4749,10664.97249,11422.59857,10510.74622,11741.54677,9656.315786,10584.23224,-1,11170.82103,11814.69172,10849.80179,10835.94152,11070.43748,11587.19129,12218.40033,10912.02972,9812.201894,10149.99716,10846.75864,9992.616242,9924.495056,9750.24986,9796.978919,8514.719936,9445.777897,10157.94728,9095.860459,9231.327102,9599.301821,9199.647298,9973.483523,9252.008666,9576.604024,9303.737183,8184.024299,9319.676375,9585.087776,10125.49527,9206.78056,9812.794523,9551.232949,10313.18708,9943.796352,10590.47054,9699.328351,10336.65863,9720.806078,10002.36398,9554.20982,9876.491122,8808.710688,9337.390362,8729.420189,9411.325687,9695.060739,9662.282076,9370.046112,9211.036891,11273.263,9314.11841,10281.1564,10259.23157,10116.78422,9685.164516,10502.02773,9996.386134,9837.924971,10576.7719,10033.1924,9968.646194,9377.281659,10033.07069,9617.600109,9312.129956,9210.49048,9468.164874,9767.204625,9035.663056,9232.657707,9392.726307,9518.855354,8456.926844,9327.214536,10040.73016,10029.32273,9471.708562,9592.896548,9928.968877,10427.91235,10658.45746,-1};//Jon's improved 


   //  vector<double> beamrate = {6447.754775,6564.360774,6454.116151,6030.224908,5912.894058,8375.336828,8025.150517,-1,6231.624601,5754.54608,7559.237545,6842.341822,6727.01434,7204.549343,6341.650215,6691.84131,5585.45034,6422.640881,6786.595273,7536.039016,7299.978571,9473.403026,9748.727085,10237.10879,10172.2707,10229.88595,9896.685438,9752.511023,10205.60307,10103.5184,9691.448399,10023.13277,10626.78229,10434.53711,9924.428786,10253.96449,10006.88327,9466.111184,10337.03863,9974.842972,9713.388886,9172.090808,7873.414342,8764.186462,8624.55414,8253.959558,8823.805076,9679.625279,9596.013369,9464.396016,9201.327359,9308.851807,8923.525037,9334.935935,9073.120424,8893.716063,8667.898944,8792.549025,8437.483558,8189.876221,8313.203752,8221.351804,8158.488776,8104.937279,6993.436278,5935.47833,5784.5966,5807.9583,7192.362745,7035.693289,6909.312953,6920.646688,6677.013504,5768.80305,6582.155683,6042.88454,7117.558223,9911.882983,9117.447041,8981.492782,8920.779208,8635.417197,8600.713511,8788.418931,8915.186004,6498.891336,6730.847199,6326.141591,7001.689605,6660.69687,-1,5859.211498,6778.778632,8122.526736,7651.19641,7680.874457,7493.227422,6793.299068,6255.635498,7654.137029,9269.803851,7949.787248,7501.20433,7401.500512,8735.596464,9305.499281,9100.873561,9872.210886,10418.02803,9436.785723,9617.058409,7164.644979,8986.940554,8812.284079,8552.769704,8432.924686,8670.621831,8649.271487,7560.384611,7376.712619,6872.069064,6818.384297,7217.575311,8091.851417,7976.50003,7623.28158,7632.698134,7814.764861,7654.023215,7114.683998,7623.212689,7496.757983,7847.742944,7394.658039,7639.134524,7417.822438,8005.924213,-1,7595.398667,6974.127206,7437.710717,6920.407041,5975.721465,7255.113908,7189.335671,9667.49575,8864.689657,7894.969737,7892.279975,8095.520,-1,8178.904879,8444.329807,8883.548585,9231.212433,9006.418923,6448.506771,9152.405692,9472.937812,9127.510679,9689.263742,9713.430552,9429.595417,9674.502405,9933.033472,8986.159117,9277.956558,9572.079669,9681.687897,9396.762902,8544.606877,9021.344144,9930.295987,10023.09286,9532.346729,8861.571547,6806.406888,9052.890288,9890.588031,9628.720524,9686.903903,8493.787126,8986.438439,9032.604118,8894.141273,8652.580504,8527.349213,9505.113859,9350.59836,8457.671921,9466.431554,9575.166096,9867.257951,9938.911297,10158.49689,9841.428,7594.157452,9029.006934,9636.481122,10022.09208,9021.31591,8454.499252,8798.653066,9541.458351,10025.0994,10201.36338,10206.77701,10158.88062,10020.13161,10317.14867,10184.53125,9889.614352,10645.75798,10090.67909,10460.77917,10603.79618,10571.74734,10238.67525,10283.508,10583.52239,10372.58058,10500.96017,9789.086097,10439.34519,10648.44532,10707.37109,10660.85363,9257.515574,9688.242987,10221.40773,8902.587363,10247.81567,10143.98708,10252.73442,10141.03608,10646.28973,10177.34285,10588.72378,10265.9116,9657.316044,9374.799578,10031.53138,-1,10860.94249,10962.90224,10007.5368,8633.69225,10632.68009,10574.47421,11103.19419,10142.70534,8383.215788,9500.895865,9486.544083,9452.120553,9281.085013,8679.605156,8947.996693,8231.624879,8916.670392,8959.27804,9313.182896,9277.934973,8975.887436,8783.707729,9279.452203,9075.075583,8343.947284,8514.846363,8583.091411,8728.584056,9459.538203,9603.464149,9391.329656,8599.439618,9311.171284,9473.71837,8165.423449,9358.267277,9172.82892,8793.640438,9098.965786,9512.484681,9111.544495,8667.789496,9000.184538,9476.6303,9741.808496,9377.044893,9356.109607,9588.339859,9607.174671,9253.381905,8546.18254,9459.063242,9678.264861,9597.02109,9258.043357,9781.241472,9426.042883,9622.304572,9298.193514,9374.061853,9368.527533,9364.849778,9664.427368,9424.756278,9299.477971,9141.794078,9278.615749,8302.733747,8021.325638,7569.092665,7960.928192,8508.426886,8231.730126,8985.628368,9155.392647,8001.086016,9232.067115,9058.558982,9610.366374,9241.009823,9639.996816,9723.809178,-1}; //F13 raw

  
  vector<double> density = {1.09E-08,1.09E-08,9.31E-09,9.99E-09,1.05E-08,1.62E-08,1.56E-08,1.36E-08,1.16E-08,1.08E-08,1.62E-08,1.54E-08,1.17E-08,1.19E-08,8.67E-09,1.07E-08,8.24E-09,1.1E-08,1.09E-08,1.42E-08,1.63E-08,2.08E-08,2.04E-08,2.07E-08,2.37E-08,2.11E-08,2.1E-08,2.29E-08,2.16E-08,2.38E-08,2.02E-08,1.97E-08,2.59E-08,2.31E-08,2.23E-08,2.22E-08,2.02E-08,2.29E-08,2.17E-08,2.21E-08,2.29E-08,1.96E-08,1.73E-08,1.75E-08,1.88E-08,1.67E-08,1.97E-08,2.11E-08,2.26E-08,1.76E-08,1.91E-08,1.88E-08,1.84E-08,1.78E-08,1.81E-08,1.89E-08,1.75E-08,1.56E-08,1.58E-08,1.56E-08,1.73E-08,1.52E-08,1.66E-08,1.59E-08,1.02E-08,7.36E-09,6.86E-09,9.23E-09,1.25E-08,1.09E-08,9.83E-09,1.26E-08,1.03E-08,6.71E-09,1.27E-08,1.12E-08,1.5E-08,2.18E-08,1.85E-08,2.02E-08,1.75E-08,1.63E-08,1.51E-08,1.69E-08,1.76E-08,1.82E-08,1.87E-08,1.57E-08,1.94E-08,1.67E-08,1.63E-08,1.59E-08,1.92E-08,2.3E-08,1.99E-08,2.1E-08,2.04E-08,1.61E-08,1.56E-08,2.19E-08,2.79E-08,2.06E-08,1.73E-08,2.05E-08,2.24E-08,2.73E-08,2.53E-08,2.72E-08,2.77E-08,2.54E-08,2.65E-08,2.47E-08,2.6E-08,2.44E-08,2.43E-08,2.27E-08,2.39E-08,2.17E-08,2.13E-08,1.89E-08,1.68E-08,2.28E-08,2.05E-08,2.28E-08,2.27E-08,2.14E-08,2.21E-08,2.2E-08,2.13E-08,2.09E-08,2.27E-08,2.27E-08,2.16E-08,2.05E-08,2.16E-08,2.02E-08,2.38E-08,2.19E-08,2E-08,1.86E-08,1.9E-08,1.79E-08,1.4E-08,1.95E-08,2.04E-08,4.23E-08,4.29E-08,4.03E-08,3.92E-08,3.9E-08,3.82E-08,3.74E-08,3.96E-08,4.14E-08,4.33E-08,4.14E-08,3.95E-08,4.23E-08,4.26E-08,4.01E-08,4.26E-08,4.17E-08,4.11E-08,4.25E-08,4.31E-08,4.13E-08,3.94E-08,4.18E-08,4.29E-08,3.97E-08,4.21E-08,4.15E-08,4.38E-08,4.21E-08,4.25E-08,4.1E-08,4.53E-08,4.38E-08,4.45E-08,4.26E-08,4.13E-08,4.04E-08,3.91E-08,4.04E-08,4.09E-08,4.05E-08,4.03E-08,4.14E-08,4.24E-08,4.29E-08,4.17E-08,4.17E-08,4.13E-08,4.38E-08,4.28E-08,4.33E-08,3.81E-08,4.05E-08,4.3E-08,4.29E-08,4.36E-08,3.97E-08,3.86E-08,4.17E-08,4.23E-08,4.37E-08,4.35E-08,4.47E-08,4.35E-08,4.31E-08,4.37E-08,4.25E-08,4.68E-08,4.54E-08,4.55E-08,4.6E-08,4.52E-08,4.55E-08,4.5E-08,4.62E-08,4.35E-08,4.63E-08,4.5E-08,4.46E-08,4.48E-08,4.45E-08,4.64E-08,4.29E-08,4.22E-08,4.34E-08,4.42E-08,4.37E-08,4.39E-08,4.5E-08,4.52E-08,4.3E-08,4.31E-08,4.53E-08,4.27E-08,4.62E-08,4.03E-08,4.29E-08,4.37E-08,4.46E-08,4.64E-08,4.37E-08,4.36E-08,4.43E-08,4.57E-08,4.75E-08,4.38E-08,4.07E-08,4.17E-08,4.37E-08,4.13E-08,4.11E-08,4.06E-08,4.07E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08,2.55E-08};

  vector<int> system = {};

  /*
  vector<double> sn108_charge = {1.09E-08,1.09E-08,9.31E-09,9.99E-09,1.05E-08,1.62E-08,1.56E-08,1.36E-08,1.16E-08,1.08E-08,1.62E-08,1.54E-08,1.17E-08,1.19E-08,8.67E-09,1.07E-08,8.24E-09,1.10E-08,1.09E-08,1.42E-08,1.63E-08,2.08E-08,2.04E-08,2.07E-08,2.37E-08,2.11E-08,2.10E-08,2.29E-08,2.16E-08,2.38E-08,2.02E-08,1.97E-08,2.59E-08,2.31E-08,2.23E-08,2.22E-08,2.02E-08,2.29E-08,2.17E-08,2.21E-08,2.29E-08,1.96E-08,1.73E-08,1.75E-08,1.88E-08,1.67E-08,1.97E-08,2.11E-08,2.26E-08,1.76E-08,1.91E-08,1.88E-08,1.84E-08,1.78E-08,1.81E-08,1.89E-08,1.75E-08,1.56E-08,1.58E-08,1.56E-08,1.73E-08,1.52E-08,1.66E-08,1.59E-08,1.02E-08,7.36E-09,6.86E-09,9.23E-09,1.25E-08,1.09E-08,9.83E-09,1.26E-08,1.03E-08,6.71E-09,1.27E-08,1.12E-08,1.50E-08,2.18E-08,1.85E-08,2.02E-08,1.75E-08,1.63E-08,1.51E-08,1.69E-08,1.76E-08};

  vector<double> sn108_run = {  2272,2273,2274,2275,2276,2283,2284,2285,2286,2288,2289,2291,2310,2311,2314,2315,2320,2322,2323,2324,2325,2331,2332,2333,2334,2335,2336,2337,2340,2341,2362,2363,2368,2369,2370,2371,2372,2373,2374,2375,2378,2379,2380,2381,2382,2383,2384,2385,2386,2387,2388,2389,2391,2392,2393,2394,2395,2396,2397,2398,2399,2400,2401,2402,2429,2432,2433,2434,2437,2438,2439,2440,2442,2453,2461,2462,2463,2501,2502,2503,2505,2506,2507,2508,2509};


  vector<double> sn108_br = {6447.754775,6564.360774,6454.116151,6030.224908,5912.894058,8375.336828,8025.150517,-1,6231.624601,5754.54608,7559.237545,6842.341822,6727.01434,7204.549343,6341.650215,6691.84131,5585.45034,6422.640881,6786.595273,7536.039016,7299.978571,9473.403026,9748.727085,10237.10879,10172.2707,10229.88595,9896.685438,9752.511023,10205.60307,10103.5184,9691.448399,10023.13277,10626.78229,10434.53711,9924.428786,10253.96449,10006.88327,9466.111184,10337.03863,9974.842972,9713.388886,9172.090808,7873.414342,8764.186462,8624.55414,8253.959558,8823.805076,9679.625279,9596.013369,9464.396016,9201.327359,9308.851807,8923.525037,9334.935935,9073.120424,8893.716063,8667.898944,8792.549025,8437.483558,8189.876221,8313.203752,8221.351804,8158.488776,8104.937279,6993.436278,5935.47833,5784.5966,5807.9583,7192.362745,7035.693289,6909.312953,6920.646688,6677.013504,5768.80305,6582.155683,6042.88454,7117.558223,9911.882983,9117.447041,8981.492782,8920.779208,8635.417197,8600.713511,8788.418931,8915.186004};

  vector<double>  sn132_run ={2841,2843,2844,2845,2846,2848,2849,2850,2851,2852,2855,2856,2857,2858,2859,2860,2861,2875,2877,2878,2879,2880,2881,2882,2883,2884,2887,2888,2889,2890,2891,2892,2893,2894,2896,2898,2899,2900,2901,2902,2903,2904,2905,2907,2914,2916,2917,2919,2920,2921,2922,2924,2925,2926,2927,2929,2930,2931,2932,2933,2934,2935,2936,2939,2940,2941,2942,2943,2944,2945,2946,2948,2955,2956,2958,2959,2960,2961,2962,2964,2965,2966,2968,2969,2970,2971,2972,2973,2975,2976,2977,2978,2979};

vector<double> sn132_br = {9667.49575,8864.689657,7894.969737,7892.279975,8095.52008,-1,8178.904879,8444.329807,8883.548585,9231.212433,9006.418923,6448.506771,9152.405692,9472.937812,9127.510679,9689.263742,9713.430552,9429.595417,9674.502405,9933.033472,8986.159117,9277.956558,9572.079669,9681.687897,9396.762902,8544.606877,9021.344144,9930.295987,10023.09286,9532.346729,8861.571547,6806.406888,9052.890288,9890.588031,9628.720524,9686.903903,8493.787126,8986.438439,9032.604118,8894.141273,8652.580504,8527.349213,9505.113859,9350.59836,8457.671921,9466.431554,9575.166096,9867.257951,9938.911297,10158.49689,9841.428,7594.157452,9029.006934,9636.481122,10022.09208,9021.31591,8454.499252,8798.653066,9541.458351,10025.0994,10201.36338,10206.77701,10158.88062,10020.13161,10317.14867,10184.53125,9889.614352,10645.75798,10090.67909,10460.77917,10603.79618,10571.74734,10238.67525,10283.508,10583.52239,10372.58058,10500.96017,9789.086097,10439.34519,10648.44532,10707.37109,10660.85363,9257.515574,9688.242987,10221.40773,8902.587363,10247.81567,10143.98708,10252.73442,10141.03608,10646.28973,10177.34285,10588.72378};


vector<double> sn132_charge = {4.23E-08,4.29E-08,4.03E-08,3.92E-08,3.90E-08,3.82E-08,3.74E-08,3.96E-08,4.14E-08,4.33E-08,4.14E-08,3.95E-08,4.23E-08,4.26E-08,4.01E-08,4.26E-08,4.17E-08,4.11E-08,4.25E-08,4.31E-08,4.13E-08,3.94E-08,4.18E-08,4.29E-08,3.97E-08,4.21E-08,4.15E-08,4.38E-08,4.21E-08,4.25E-08,4.10E-08,4.53E-08,4.38E-08,4.45E-08,4.26E-08,4.13E-08,4.04E-08,3.91E-08,4.04E-08,4.09E-08,4.05E-08,4.03E-08,4.14E-08,4.24E-08,4.29E-08,4.17E-08,4.17E-08,4.13E-08,4.38E-08,4.28E-08,4.33E-08,3.81E-08,4.05E-08,4.30E-08,4.29E-08,4.36E-08,3.97E-08,3.86E-08,4.17E-08,4.23E-08,4.37E-08,4.35E-08,4.47E-08,4.35E-08,4.31E-08,4.37E-08,4.25E-08,4.68E-08,4.54E-08,4.55E-08,4.60E-08,4.52E-08,4.55E-08,4.50E-08,4.62E-08,4.35E-08,4.63E-08,4.50E-08,4.46E-08,4.48E-08,4.45E-08,4.64E-08,4.29E-08,4.22E-08,4.34E-08,4.42E-08,4.37E-08,4.39E-08,4.50E-08,4.52E-08,4.30E-08,4.31E-08,4.53E-08};
  */

  double limit = 5.;
  int sn132_c = kRed - 4;
  int sn108_c = kBlue - 4;
  int sn112_c = kGreen - 4;
  int sn124_c = kCyan - 4;
  
  TH1D *sn132sc_h = new TH1D("sn132sc_h","",75,0,limit);
  TH1D *sn108sc_h = new TH1D("sn108sc_h","",75,0,limit);
  TH1D *sn112sc_h = new TH1D("sn112sc_h","",75,0,limit);
  TH1D *sn124sc_h = new TH1D("sn124sc_h","",75,0,limit);


  vector<double> sn132br, sn108br, sn124br, sn112br; 
  vector<double> sn132sc, sn108sc, sn124sc, sn112sc;
  
  if(run.size() != density.size() || density.size()!=system.size() || density.size() != beamrate.size() )
    cout<<"NOT EQUAL SIZE !!!!"<<endl;
  
  for(int i = 0; i < run.size(); i++)
    {
      if(system.at(i) == 108112)
	{
	  sn108sc_h->Fill(density.at(i)*1e8);
	  sn108br.push_back(beamrate.at(i));
	  sn108sc.push_back(density.at(i)*1e8);
	}
      else if(system.at(i) == 132124)
	{
	  sn132sc_h->Fill(density.at(i)*1e8);
	  sn132br.push_back(beamrate.at(i));
	  sn132sc.push_back(density.at(i)*1e8);
	}
      else if(system.at(i) == 112124)
	{
	  sn112sc_h->Fill(density.at(i)*1e8);
	  sn112br.push_back(beamrate.at(i));
	  sn112sc.push_back(density.at(i)*1e8);
	}
      else
	{
	sn124sc_h->Fill(density.at(i)*1e8);
	sn124br.push_back(beamrate.at(i));
	sn124sc.push_back(density.at(i)*1e8);
	}

    }



  TGraph *density_132 = new TGraph(sn132br.size(),sn132br.data(),sn132sc.data());
  TGraph *density_108 = new TGraph(sn108br.size(),sn108br.data(),sn108sc.data());
  TGraph *density_112 = new TGraph(sn112br.size(),sn112br.data(),sn112sc.data());
  TGraph *density_124 = new TGraph(sn124br.size(),sn124br.data(),sn124sc.data());

  density_132->SetTitle("");

  TH1D *br_132 = new TH1D("br_132","br_132",10,6000,12000);
  TH1D *br_108 = new TH1D("br_108","br_108",10,6000,12000);


  THStack *stack = new THStack("stack",";#sigma (x10^{-8} C/m^{2});# of Runs");

  sn108sc_h->GetXaxis()->SetTitle("#sigma Sheet Density (x10^{-8} C/m^2)");
  sn108sc_h->GetYaxis()->SetTitle("# of Runs");  
  sn108sc_h->GetXaxis()->CenterTitle();
  sn108sc_h->GetYaxis()->CenterTitle();

  sn132sc_h->GetXaxis()->SetTitle("#sigma Sheet Density (x10^{-8} C/m^2)");
  sn132sc_h->GetYaxis()->SetTitle("# of Runs");  
  sn132sc_h->GetXaxis()->CenterTitle();
  sn132sc_h->GetYaxis()->CenterTitle();

  sn124sc_h->GetXaxis()->SetTitle("#sigma Sheet Density (x10^{-8} C/m^2)");
  sn124sc_h->GetYaxis()->SetTitle("# of Runs");  
  sn124sc_h->GetXaxis()->CenterTitle();
  sn124sc_h->GetYaxis()->CenterTitle();

  sn112sc_h->GetXaxis()->SetTitle("#sigma Sheet Density (x10^{-8} C/m^2)");
  sn112sc_h->GetYaxis()->SetTitle("# of Runs");  
  sn112sc_h->GetXaxis()->CenterTitle();
  sn112sc_h->GetYaxis()->CenterTitle();

  /*
  sn108sc_h->SetLineWidth(5);
  sn112sc_h->SetLineWidth(5);
  sn124sc_h->SetLineWidth(5);
  sn132sc_h->SetLineWidth(5);
  */
  
  sn108sc_h->SetFillColor(sn108_c);
  sn112sc_h->SetFillColor(sn112_c);
  sn124sc_h->SetFillColor(sn124_c);
  sn132sc_h->SetFillColor(sn132_c);


  stack->Add(sn108sc_h);
  stack->Add(sn112sc_h);
  stack->Add(sn124sc_h);
  stack->Add(sn132sc_h);


  TCanvas *c1 = new TCanvas("c1","c1",2000,1200);
  c1->SetRightMargin(.2);
  c1->SetLeftMargin(.2);
  c1->SetTopMargin(.05);
  c1->SetBottomMargin(.2);
  
  double xdim = .75;
  double eps = 0;

  TLegend *leg = new TLegend(.7,.12,.9,.35);
  leg->AddEntry(density_132,"{}^{132}Sn","p");
  leg->AddEntry(density_124,"{}^{124}Sn","p");
  leg->AddEntry(density_112,"{}^{112}Sn","p");
  leg->AddEntry(density_108,"{}^{108}Sn","p");
  
  //  TPad *pad1 = new TPad("pad1","pad1",0,0,xdim,1);
  //  TPad *pad2 = new TPad("pad2","pad2",xdim,0,1,1);
  TPad *pad1 = new TPad("pad1","pad1",0,0,xdim,1,0);
  TPad *pad2 = new TPad("pad2","pad2",xdim  + eps,0,1,1,0);

  pad1->SetRightMargin(0);
  pad2->SetLeftMargin(0);
  //  pad2->SetFillColorAlpha(0,0);
  pad1->Draw();
  pad2->Draw();
  
  density_132->SetMarkerStyle(20);
  density_132->SetMarkerSize(2);
  density_132->SetMarkerColor(sn132_c);

  density_108->SetMarkerStyle(20);
  density_108->SetMarkerSize(2);
  density_108->SetMarkerColor(sn108_c);

  density_112->SetMarkerStyle(20);
  density_112->SetMarkerSize(2);
  density_112->SetMarkerColor(sn112_c);

  density_124->SetMarkerStyle(20);
  density_124->SetMarkerSize(2);
  density_124->SetMarkerColor(sn124_c);

  pad1->cd();
  TH1D *dummy = new TH1D("dummy","",100,5000,11500);
  density_132->GetYaxis()->SetRangeUser(0,5);
  dummy->GetYaxis()->SetRangeUser(0,5);
  dummy->Draw();
  density_132->Draw("same PO");
  density_108->Draw("same PO");
  density_112->Draw("same PO");
  density_124->Draw("same PO");
  leg->SetBorderSize(0);
  leg->SetFillColorAlpha(0,0);
  leg->Draw();
  
  pad2->cd();
  stack->Draw("hbar");
	     

    
  TGraph *density_g = new TGraph(density.size());

  for(int i = 0; i < density.size(); i++)
    {
      density_g->SetPoint(i,run.at(i),density.at(i));
    }

  /*
  density_g->SetMarkerColor(2);
  density_g->SetMarkerStyle(20);
  density_g->SetMarkerSize(2);
  density_g->Draw("APO");
  */
  
  TLegend *leg_2 = new TLegend(.6,.5,.8,.8);
  leg_2->AddEntry(density_132,"{}^{132}Sn","p");
  leg_2->AddEntry(density_124,"{}^{124}Sn","p");
  leg_2->AddEntry(density_112,"{}^{112}Sn","p");
  leg_2->AddEntry(density_108,"{}^{108}Sn","p");
  leg_2->SetBorderSize(0);

  TCanvas *c2 = new TCanvas("c2","c2",1500,900);
  c2->SetRightMargin(.1);
  c2->SetLeftMargin(.1);
  c2->SetTopMargin(.1);
  c2->SetBottomMargin(.15);
  c2->SetFrameLineWidth(5);
  gStyle->SetLineWidth(5);
  gPad->SetLineWidth(5);

  stack->Draw();
  stack->GetXaxis()->CenterTitle();
  stack->GetYaxis()->CenterTitle();

  stack->GetXaxis()->SetLabelSize(.06);
  stack->GetYaxis()->SetLabelSize(.06);

  stack->GetXaxis()->SetTitleOffset(1.1);
  stack->GetYaxis()->SetTitleOffset(.8);

  stack->GetXaxis()->SetTitleSize(.06);
  stack->GetYaxis()->SetTitleSize(.06);

  leg_2->Draw();
  c2->Modified();
  c2->SaveAs("spaceChgDensity.png");

  /*
  br_132->SetLineColor(2);
  br_108->SetLineColor(4);  
  br_132->Draw();
  br_108->Draw("same");
  */
}
